name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:

  clang:
    strategy:
      matrix:
        clang: [16, 17]
        stdlib: ["libc++", "libstdc++"]
        standard: [17, 20]
      fail-fast: false
    name: "Clang ${{ matrix.clang }} (C++${{ matrix.standard }}, ${{ matrix.stdlib }})"
    runs-on: ubuntu-20.04
    steps:
      - id: setup-clang
        name: "Install Clang"
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.clang }}
      - name: "Install libc++"
        if: ${{ matrix.stdlib == 'libc++' }}
        run: sudo apt-get install libc++abi-${{ matrix.clang }}-dev libc++1-${{ matrix.clang }} libc++-${{ matrix.clang }}-dev
      
      - uses: actions/checkout@v2
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=${{ steps.setup-clang.outputs.clangxx }} -DCMAKE_C_COMPILER=${{ steps.setup-clang.outputs.clang }} -DCMAKE_CXX_STANDARD=${{ matrix.standard }} -DCMAKE_CXX_STANDARD_REQUIRED=ON -DCMAKE_CXX_EXTENSIONS=OFF -DCMAKE_CXX_FLAGS="-stdlib=${{ matrix.stdlib}}
  
      - name: Build
        # Build your program with the given configuration
        run: cmake --build build --config ${{env.BUILD_TYPE}}
  
      - name: Test
        working-directory: build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}  

