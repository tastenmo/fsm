include(CheckCXXCompilerFlag)

include(CTest)
include(Catch)

if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
    set(OPTIONS /W4 /WX)
    check_cxx_compiler_flag(/permissive HAS_PERMISSIVE_FLAG)
    if(HAS_PERMISSIVE_FLAG)
        set(OPTIONS ${OPTIONS} /permissive-)
    endif()

    check_cxx_compiler_flag(/std:c++20 HAS_CPP20_FLAG)
    check_cxx_compiler_flag(/std:c++latest HAS_CPPLATEST_FLAG)
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    set(CMAKE_VERBOSE_MAKEFILE ON)
    set(OPTIONS -Wall -Wextra -pedantic-errors)
     check_cxx_compiler_flag(-std=c++20 HAS_CPP20_FLAG)
endif()

function(assign_test src lib std)
    get_filename_component(target ${src} NAME_WE)
    add_executable(${target} ${src})
    target_compile_options(${target} PRIVATE ${OPTIONS})
    target_link_libraries(${target} PRIVATE ${lib} Catch2::Catch2WithMain)
    set_target_properties(${target} PROPERTIES CXX_EXTENSIONS OFF)
    if(std)
        if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
            target_compile_options(${target} PRIVATE /std:${std})
        else()
            target_compile_options(${target} PRIVATE -std=${std})
        endif()
    endif()
#    add_test(NAME ${target} COMMAND ${target})
    catch_discover_tests(${target} TEST_PREFIX ${lib} TEST_SUFFIX ${std} ADD_TAGS_AS_LABELS)
endfunction()

function(assign_test_with_includes src lib std include_dirs)
    get_filename_component(target ${src} NAME_WE)
    add_executable(${target} ${src})
    target_compile_options(${target} PRIVATE ${OPTIONS})
    target_include_directories(${target} PRIVATE ${include_dirs})
    target_link_libraries(${target} PRIVATE ${lib} Catch2::Catch2WithMain)
    set_target_properties(${target} PROPERTIES CXX_EXTENSIONS OFF)
    if(std)
        if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
            target_compile_options(${target} PRIVATE /std:${std})
        else()
            target_compile_options(${target} PRIVATE -std=${std})
        endif()
    endif()
#    add_test(NAME ${target} COMMAND ${target})
    catch_discover_tests(${target} TEST_PREFIX ${lib} TEST_SUFFIX ${std} ADD_TAGS_AS_LABELS)
endfunction()